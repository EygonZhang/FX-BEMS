#FX-BEMS©#
This patent describes a Python-based integrated system that utilizes an enhanced twist-blade BEM (Blade Element Momentum) algorithm coupled with XFoil to achieve refined modeling of blade forces. The design process involves: FX-BEMS_0. Dividing the blade into elements; FX-BEMS_1. Inputting XFoil parameters to obtain 2D airfoil data; FX-BEMS_2. Performing BEM iteration to calculate rotation correction; FX-BEMS_3. Setting the tip loss factor and conducting convergence checks

# Quick Start #
##0. Blade Element Division
This section of the code divides the blade into user-defined elements and outputs the geometric parameters for each element, including radius, chord length, and twist angle.
 
##1. XFoil Parameter Input for 2D Airfoil Data ##
Since the shape of each blade element varies, the Reynolds number (Re) increases significantly (approximately twofold) from the blade tip to the root. Additionally, the initial angle of attack changes due to the twist design. Before use, engineers must refer to the blade geometric parameters from Section 0 to calculate the corresponding Re and twist angle, which serve as input parameters for XFoil.exe. The prompt file also supports the selection of the Ncrit transition number. Refer to Table 1 for recommended fluid transition numbers.

For detailed instructions, see XFoil input/Readme_XFoil.

##2. BEM Iteration for Rotation Correction##
Using the XFoil output from Section 1, this section of the code takes the 2D CL (lift coefficient) and CD (drag coefficient) results for each blade element as input to perform BEM iteration.

##3. Tip Loss Factor Setting and Convergence Check##
The Prandtl tip loss function model yields a singularity solution at r = R (blade tip). In industrial applications, this result is often assumed to be a value between 0.25 and 0.5. However, this can lead to convergence issues. This section of the code independently calculates whether the engineer-specified F value produces a convergent result at the blade tip. If convergence fails, the induction factors may diverge (a → 1.000, a' → -1.000).

##Note##: After running this section and selecting an appropriate F value, it is necessary to rerun the code from Section 2.
